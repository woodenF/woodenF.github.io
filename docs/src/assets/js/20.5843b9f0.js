(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{202:function(s,t,e){"use strict";e.r(t);var a=e(6),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"使用eslint自动格式化代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用eslint自动格式化代码"}},[s._v("#")]),s._v(" 使用ESlint自动格式化代码")]),s._v(" "),e("p",[s._v("当搜索如何使用ESlint在保存时自动格式化代码时，通常会出现很多无效的解决方式(大多需要prettier,并且需要额外的配置文件)，大多会推荐安装"),e("code",[s._v("prettier")]),s._v("或者"),e("code",[s._v("standard")]),s._v("，但其实仅使用ESlint就可以满足按项目风格自动格式化代码的要求，并且配置非常简单。")]),s._v(" "),e("h2",{attrs:{id:"全局安装eslint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局安装eslint"}},[s._v("#")]),s._v(" 全局安装"),e("code",[s._v("eslint")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" insatll -g eslint\n")])])]),e("h2",{attrs:{id:"新建文件eslint-demo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#新建文件eslint-demo"}},[s._v("#")]),s._v(" 新建文件"),e("code",[s._v("eslint-demo")])]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" eslint-demo\n")])])]),e("h2",{attrs:{id:"创建-eslintrc-js配置文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建-eslintrc-js配置文件"}},[s._v("#")]),s._v(" 创建"),e("code",[s._v(".eslintrc.js")]),s._v("配置文件")]),s._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入项目目录")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" eslint-demo\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新建.eslintrc.js文件")]),s._v("\nnpx eslint --init\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按提示进行配置，完成后会在项目根目录生成.eslintec.js文件")]),s._v("\n")])])]),e("h2",{attrs:{id:"在vscode中配置自动格式化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在vscode中配置自动格式化"}},[s._v("#")]),s._v(" 在"),e("code",[s._v("VsCode")]),s._v("中配置自动格式化")]),s._v(" "),e("p",[s._v("实际上"),e("code",[s._v("eslint")]),s._v("的格式化配置非常简单，不需要其他插件的配合，只需要在"),e("code",[s._v("vscode")]),s._v("的"),e("code",[s._v("settings.json")]),s._v("中简单配置即可使用")]),s._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 文件 => 首选项 => 设置 => (右上角)打开设置json即可进入settings.json文件")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 保存时启动eslint的自动格式化")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"editor.codeActionsOnSave"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"source.fixAll.eslint"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// eslint格式化匹配文件")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[s._v('"eslint.validate"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"javascript"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vue"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),e("p",[s._v("这样在编辑代码的时候，如果不符合"),e("code",[s._v("eslint")]),s._v("的配置规则，则会根据配置选项给出相应的提示，并且在保存时会自动格式化代码")]),s._v(" "),e("p",[e("code",[s._v("eslint")]),s._v("的具体"),e("code",[s._v("rules")]),s._v("可"),e("a",{attrs:{href:"https://eslint.bootcss.com/docs/rules/",target:"_blank",rel:"noopener noreferrer"}},[s._v("点击"),e("OutboundLink")],1),s._v("查看")])])}),[],!1,null,null,null);t.default=n.exports}}]);